- comment: Sequence Diagram
  begin: \b(sequenceDiagram)
  beginCaptures:
    '1':
      name: keyword.control.pintora
  end: (^|\G)(?=\s*[`~]{3,}\s*$)
  patterns:
    - include: '#config__clause'
    - include: '#comment'
    - include: '#common__bindClass'
    - comment: '(title)'
      match: !regex |-
        (title)\s*(:)\s+ # title
        (\s*["\(\)$&%\^/#.,?!:*+=<>\'\\\-\w\s]*) # text
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: keyword.control.pintora
        '3':
          name: string
    - comment: 'participant with classifier'
      match: !regex |-
        \s*(participant)
        \s+(\[)
        (\<)
        ([^>]+)
        (\>)
        \s*([^\]]+)
        (\])
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: keyword.control.pintora
        '3':
          name: punctuation.definition.tag.begin
        '4':
          name: entity.name.tag
        '5':
          name: punctuation.definition.tag.end
        '6':
          name: variable
        '7':
          name: keyword.control.pintora
    - comment: '(participant)(Actor)(as)?(Label)?'
      match: !regex |-
        (participant)
        \s+([^ ]+)
        (?:\s+(as))?
        (?:\s+(.+))?
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: variable
        '3':
          name: keyword.control.pintora
        '4':
          name: string

    - comment: '(activate/deactivate)(Actor)'
      match: !regex |-
        \s*((?:de)?activate) # Activate/Deactivate
        \s+(\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*) # Actor
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: variable
    - comment: '(note)(direction)(Actor)(,)?(Actor)?(:)(Message)'
      match: !regex |-
        \s*(note|@note|@start_note) # Note
        \s+((?:left|right)\sof|over) # Direction
        \s+(\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*) # Actor
        (,)? # ,?
        (\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*)? # Actor
        (:) # :
        (?:\s+([^;#]*))? # Message
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: entity.name.function.pintora
        '3':
          name: variable
        '4':
          name: keyword.control.pintora
        '5':
          name: variable
        '6':
          name: keyword.control.pintora
        '7':
          name: string
    - comment: 'Multiline note'
      begin: !regex |-
        (@start_note)
        \s+((?:left|right)\sof|over) # Direction
        \s+(\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*) #Actor
        (,)? # ,?
        (\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b\s*)? # Actor
        \n
      end: '(@end_note)'
      beginCaptures:
        '1':
          name: keyword.control.pintora
        '2':
          name: entity.name.function.pintora
        '3':
          name: variable
        '4':
          name: keyword.control.pintora
        '5':
          name: variable
      endCaptures:
        '1':
          name: keyword.control.pintora
    - comment: '(end)'
      match: \s*(end)
      captures:
        '1':
          name: keyword.control.pintora
    - comment: 'box'
      match: !regex |-
        (box)\s*
        (#[0-9a-fA-F]{3,})?\s*
        (".*")? # text
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: entity.name.tag
        '3':
          name: string
    - comment: '(endbox)'
      match: \s*(endbox)
      captures:
        '1':
          name: keyword.control.pintora
    - comment: 'keywords'
      match: !regex |-
        (autonumber)
      captures:
        '1':
          name: keyword.control.pintora
    - comment: '(loop/alt/else/opt/par/and)(text)'
      match: !regex |-
        (loop|alt|else|opt|par|and|rect)\s*
        (#[0-9a-fA-F]{3,})
        \s+(.*) # text
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: entity.name.tag
        '3':
          name: string
    - comment: '(Actor)(Arrow)(Actor)(:)(Message)'
      match: !regex |-
        (\b["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b) # Actor
        \s*
        (-?-(?:\>|x|\))\>?[+-]?) # Arrow
        \s*
        (["\(\)$&%\^/#.?!*=<>\'\\\w\s]+\b) # Actor
        \s*
        (:) # :
        \s*
        ([^;#]*) # Message
      captures:
        '1':
          name: variable
        '2':
          name: keyword.control.pintora
        '3':
          name: variable
        '4':
          name: keyword.control.pintora
        '5':
          name: string
    - comment: 'divider'
      match: !regex |-
        \s*(==)\s+(.*)\s+(==)
      captures:
        '1':
          name: keyword.control.pintora
        '2':
          name: variable
        '3':
          name: keyword.control.pintora
